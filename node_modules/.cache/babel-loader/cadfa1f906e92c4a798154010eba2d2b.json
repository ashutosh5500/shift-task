{"ast":null,"code":"var _jsxFileName = \"/home/red/form-practice/src/components/Form.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport Day from \"./Day\";\nimport \"../Styling/Form.scss\";\nimport { cloneDeep } from \"lodash\";\nimport DisplayShift from \"./DisplayShift\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputField = (event, type) => {\n      const value = event.target.value;\n\n      if (type === \"startTime\") {\n        this.setState({\n          startTime: value\n        });\n      } else if (type === \"endTime\") {\n        this.setState({\n          endTime: value\n        });\n      } else if (type === \"startDate\") {\n        this.setState({\n          startDate: value\n        });\n      }\n    };\n\n    this.handleRepeatType = event => {\n      this.setState({\n        repeatType: event.target.value\n      });\n    };\n\n    this.handleShift = event => {\n      if (event.target.value) {\n        this.setState({\n          shiftValue: event.target.value\n        });\n      }\n    };\n\n    this.onDaySelect = id => {\n      const copiedState = cloneDeep(this.state);\n      const {\n        weekdays\n      } = copiedState;\n      weekdays.filter(day => {\n        if (id === day.id) {\n          day.value = !day.value;\n        }\n      });\n      this.setState({\n        weekdays: weekdays\n      });\n    };\n\n    this.onWeekSelect = id => {\n      const copiedState = cloneDeep(this.state);\n      const {\n        weekdayOnly\n      } = copiedState;\n      this.setState({\n        weekdayOnly: { ...weekdayOnly,\n          value: !weekdayOnly.value\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        startTime\n      } = this.state;\n      this.setState({\n        submit: true\n      });\n\n      if (!startTime) {\n        this.setState({\n          isValid: false\n        });\n      }\n\n      const shiftList = JSON.parse(localStorage.getItem(\"shiftList\")) || [];\n      shiftList.push(JSON.stringify(this.state));\n      localStorage.setItem(\"shiftList\", JSON.stringify(shiftList));\n    };\n\n    this.back = () => {\n      this.setState({\n        submit: false\n      });\n    };\n\n    this.state = {\n      startTime: \"\",\n      endTime: \"\",\n      startDate: \"\",\n      repeatType: \"\",\n      weekdays: [{\n        id: 1,\n        text: \"Monday\",\n        value: false,\n        apiValue: 1\n      }, {\n        id: 2,\n        text: \"Tuesday\",\n        value: false,\n        apiValue: 2\n      }, {\n        id: 3,\n        text: \"Wednesday\",\n        value: false,\n        apiValue: 3\n      }, {\n        id: 4,\n        text: \"Thursday\",\n        value: false,\n        apiValue: 4\n      }, {\n        id: 5,\n        text: \"Friday\",\n        value: false,\n        apiValue: 5\n      }, {\n        id: 6,\n        text: \"Saturday\",\n        value: false,\n        apiValue: 6\n      }, {\n        id: 7,\n        text: \"Sunday\",\n        value: false,\n        apiValue: 0\n      }],\n      shiftValue: \"\",\n      weekdayOnly: {\n        id: 1,\n        text: \"Weekdays\",\n        value: false\n      },\n      submit: false,\n      isValid: true\n    };\n  }\n\n  render() {\n    const optionValue = [{\n      value: \"none\",\n      optionText: \"None\"\n    }, {\n      value: \"daily\",\n      optionText: \"Daily\"\n    }, {\n      value: \"weekly\",\n      optionText: \"Weekly\"\n    }];\n    const shiftArray = [{\n      value: \"\",\n      optionText: \"\"\n    }, {\n      value: \"Morning Shift - 5am to 9am\",\n      optionText: \"Morning Shift - 5am to 9am\"\n    }];\n    const {\n      weekdays,\n      weekdayOnly,\n      startTime,\n      submit,\n      isValid\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: !submit ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-cmp\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Start date or Shift Times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Each row represent a shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            text: \"Select Start Date\",\n            type: \"date\",\n            placeholderValue: \"MM/DD/YYYY\",\n            onChange: this.handleInputField,\n            changeType: \"startDate\",\n            error: !isValid && !startTime.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            optionsArray: optionValue,\n            onChange: this.handleRepeatType,\n            text: \"Select Repeat type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            optionsArray: shiftArray,\n            onChange: this.handleShift,\n            text: \"Select Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            text: \"Select Start Time\",\n            type: \"time\",\n            onChange: this.handleInputField,\n            changeType: \"startTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            text: \"Select End Time\",\n            type: \"time\",\n            onChange: this.handleInputField,\n            changeType: \"endTime\",\n            readOnly: !startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"days-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Please select the day of the week \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"days-wrapper\",\n              children: weekdays.map(day => {\n                return /*#__PURE__*/_jsxDEV(Day, {\n                  data: day,\n                  onSelectEvent: this.onDaySelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week-main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"days-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Day, {\n                data: weekdayOnly,\n                onSelectEvent: this.onWeekSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"ADD +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DisplayShift, {\n        back: this.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/red/form-practice/src/components/Form.js"],"names":["React","Component","Input","Select","Day","cloneDeep","DisplayShift","Form","constructor","props","handleInputField","event","type","value","target","setState","startTime","endTime","startDate","handleRepeatType","repeatType","handleShift","shiftValue","onDaySelect","id","copiedState","state","weekdays","filter","day","onWeekSelect","weekdayOnly","handleSubmit","preventDefault","submit","isValid","shiftList","JSON","parse","localStorage","getItem","push","stringify","setItem","back","text","apiValue","render","optionValue","optionText","shiftArray","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport Day from \"./Day\";\nimport \"../Styling/Form.scss\";\nimport { cloneDeep } from \"lodash\";\nimport DisplayShift from \"./DisplayShift\";\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startTime: \"\",\n      endTime: \"\",\n      startDate: \"\",\n      repeatType: \"\",\n      weekdays: [\n        {\n          id: 1,\n          text: \"Monday\",\n          value: false,\n          apiValue: 1,\n        },\n        {\n          id: 2,\n          text: \"Tuesday\",\n          value: false,\n          apiValue: 2,\n        },\n        {\n          id: 3,\n          text: \"Wednesday\",\n          value: false,\n          apiValue: 3,\n        },\n        {\n          id: 4,\n          text: \"Thursday\",\n          value: false,\n          apiValue: 4,\n        },\n        {\n          id: 5,\n          text: \"Friday\",\n          value: false,\n          apiValue: 5,\n        },\n        {\n          id: 6,\n          text: \"Saturday\",\n          value: false,\n          apiValue: 6,\n        },\n        {\n          id: 7,\n          text: \"Sunday\",\n          value: false,\n          apiValue: 0,\n        },\n      ],\n      shiftValue: \"\",\n      weekdayOnly: { id: 1, text: \"Weekdays\", value: false },\n      submit: false,\n      isValid: true,\n    };\n  }\n\n  handleInputField = (event, type) => {\n    const value = event.target.value;\n    if (type === \"startTime\") {\n      this.setState({\n        startTime: value,\n      });\n    } else if (type === \"endTime\") {\n      this.setState({\n        endTime: value,\n      });\n    } else if (type === \"startDate\") {\n      this.setState({\n        startDate: value,\n      });\n    }\n  };\n\n  handleRepeatType = (event) => {\n    this.setState({\n      repeatType: event.target.value,\n    });\n  };\n\n  handleShift = (event) => {\n    if (event.target.value) {\n      this.setState({\n        shiftValue: event.target.value,\n      });\n    }\n  };\n\n  onDaySelect = (id) => {\n    const copiedState = cloneDeep(this.state);\n    const { weekdays } = copiedState;\n    weekdays.filter((day) => {\n      if (id === day.id) {\n        day.value = !day.value;\n      }\n    });\n    this.setState({ weekdays: weekdays });\n  };\n\n  onWeekSelect = (id) => {\n    const copiedState = cloneDeep(this.state);\n    const { weekdayOnly } = copiedState;\n    this.setState({\n      weekdayOnly: {\n        ...weekdayOnly,\n        value: !weekdayOnly.value,\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { startTime } = this.state;\n    this.setState({ submit: true });\n    if (!startTime) {\n      this.setState({isValid: false})\n    }\n    const shiftList = JSON.parse(localStorage.getItem(\"shiftList\")) || [];\n    shiftList.push(JSON.stringify(this.state));\n    localStorage.setItem(\"shiftList\", JSON.stringify(shiftList));\n  };\n\n  back = () => {\n    this.setState({ submit: false });\n  };\n\n  render() {\n    const optionValue = [\n      {\n        value: \"none\",\n        optionText: \"None\",\n      },\n      {\n        value: \"daily\",\n        optionText: \"Daily\",\n      },\n      {\n        value: \"weekly\",\n        optionText: \"Weekly\",\n      },\n    ];\n\n    const shiftArray = [\n      {\n        value: \"\",\n        optionText: \"\",\n      },\n      {\n        value: \"Morning Shift - 5am to 9am\",\n        optionText: \"Morning Shift - 5am to 9am\",\n      },\n    ];\n    const { weekdays, weekdayOnly, startTime, submit, isValid } = this.state;\n    return (\n      <React.Fragment>\n        {!submit ? (\n          <form className=\"form-cmp\" onSubmit={this.handleSubmit}>\n            <div className=\"head\">\n              <h4>Select Start date or Shift Times</h4>\n              <p>Each row represent a shift</p>\n            </div>\n            <div className=\"input-wrapper\">\n              <Input\n                text={\"Select Start Date\"}\n                type={\"date\"}\n                placeholderValue=\"MM/DD/YYYY\"\n                onChange={this.handleInputField}\n                changeType=\"startDate\"\n                error={!isValid && !startTime.length}\n              />\n              <Select\n                optionsArray={optionValue}\n                onChange={this.handleRepeatType}\n                text={\"Select Repeat type\"}\n              />\n              <Select\n                optionsArray={shiftArray}\n                onChange={this.handleShift}\n                text={\"Select Shift\"}\n              />\n              <Input\n                text={\"Select Start Time\"}\n                type={\"time\"}\n                onChange={this.handleInputField}\n                changeType=\"startTime\"\n              />\n              <Input\n                text={\"Select End Time\"}\n                type={\"time\"}\n                onChange={this.handleInputField}\n                changeType=\"endTime\"\n                readOnly={!startTime}\n              />\n              <div className=\"days-main\">\n                <h4>Please select the day of the week </h4>\n                <div className=\"days-wrapper\">\n                  {weekdays.map((day) => {\n                    return <Day data={day} onSelectEvent={this.onDaySelect} />;\n                  })}\n                </div>\n              </div>\n\n              <div className=\"week-main\">\n                <div className=\"days-wrapper\">\n                  {<Day data={weekdayOnly} onSelectEvent={this.onWeekSelect} />}\n                </div>\n              </div>\n            </div>\n            <div className={\"add-btn\"}>\n              <button type=\"submit\">ADD +</button>\n            </div>\n          </form>\n        ) : (\n          <DisplayShift back={this.back} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}